package cargos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// POSTCargosReader is a Reader for the POSTCargos structure.
type POSTCargosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *POSTCargosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPOSTCargosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPOSTCargosOK creates a POSTCargosOK with default headers values
func NewPOSTCargosOK() *POSTCargosOK {
	return &POSTCargosOK{}
}

/*POSTCargosOK handles this case with default header values.

POSTCargosOK p o s t cargos o k
*/
type POSTCargosOK struct {
	Payload POSTCargosOKBody
}

func (o *POSTCargosOK) Error() string {
	return fmt.Sprintf("[POST /cargos][%d] pOSTCargosOK  %+v", 200, o.Payload)
}

func (o *POSTCargosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*POSTCargosBody p o s t cargos body
swagger:model POSTCargosBody
*/
type POSTCargosBody struct {

	// Apellidos del cliente.
	// Required: true
	// Max Length: 5
	// Min Length: 2
	Apellidos *string `json:"apellidos"`

	// Ciudad del cliente. p. ej: Lima
	// Required: true
	// Max Length: 30
	// Min Length: 2
	Ciudad *string `json:"ciudad"`

	// Código [ISO-3166-1 Alfa 2](https://es.wikipedia.org/wiki/ISO_3166-1) del país del cliente. p. ej: PE (Perú)
	// Required: true
	// Max Length: 2
	// Min Length: 2
	CodigoPais *string `json:"codigo_pais"`

	// Dirección de correo electrónico del cliente.
	// Required: true
	CorreoElectronico *strfmt.Email `json:"correo_electronico"`

	// Una descripción de la breve sobre el/los producto(s) o servicio(s) que se están vendiendo.
	// Required: true
	// Max Length: 80
	// Min Length: 5
	Descripcion *string `json:"descripcion"`

	// Dirección del cliente.
	// Required: true
	// Max Length: 100
	// Min Length: 5
	Direccion *string `json:"direccion"`

	// Código de la moneda en tres letras (Formato [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)). p. ej: PEN o USD
	// Required: true
	// Max Length: 3
	// Min Length: 3
	Moneda *string `json:"moneda"`

	// Monto de la venta o cargo. Sin punto decimal. p. ej: 199.00 sería 19900
	// Required: true
	// Maximum: < 9.9999999e+07
	// Minimum: > 1
	Monto *int64 `json:"monto"`

	// Nombres del cliente.
	// Required: true
	// Max Length: 50
	// Min Length: 2
	Nombres *string `json:"nombres"`

	// Identificador de la orden o pedido, debe ser único por cargo. p. ej:  P000007, P000008
	// Required: true
	// Max Length: 80
	// Min Length: 5
	Pedido *string `json:"pedido"`

	// Número de teléfono del cliente.
	// Required: true
	Telefono *int64 `json:"telefono"`

	// Token de tarjeta creado anteriormente.
	// Required: true
	Token *string `json:"token"`

	// Identificador del ciente, podría ser su DNI o correo. p. ej: 71702955
	// Required: true
	// Max Length: 15
	// Min Length: 2
	Usuario *string `json:"usuario"`
}

/*POSTCargosOKBody p o s t cargos o k body
swagger:model POSTCargosOKBody
*/
type POSTCargosOKBody struct {

	// creado
	// Required: true
	Creado *int64 `json:"creado"`

	// descripcion
	// Required: true
	Descripcion *string `json:"descripcion"`

	// id
	// Required: true
	ID *string `json:"id"`

	// moneda
	// Required: true
	Moneda *string `json:"moneda"`

	// monto
	// Required: true
	Monto *int64 `json:"monto"`

	// objeto
	// Required: true
	Objeto *string `json:"objeto"`

	// pedido
	// Required: true
	Pedido *string `json:"pedido"`

	// token
	// Required: true
	Token *POSTCargosOKBodyToken `json:"token"`

	// usuario
	// Required: true
	Usuario *string `json:"usuario"`
}

// Validate validates this p o s t cargos o k body
func (o *POSTCargosOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreado(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDescripcion(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMoneda(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMonto(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateObjeto(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePedido(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateToken(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUsuario(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *POSTCargosOKBody) validateCreado(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"creado", "body", o.Creado); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validateDescripcion(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"descripcion", "body", o.Descripcion); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validateMoneda(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"moneda", "body", o.Moneda); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validateMonto(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"monto", "body", o.Monto); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validateObjeto(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"objeto", "body", o.Objeto); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validatePedido(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"pedido", "body", o.Pedido); err != nil {
		return err
	}

	return nil
}

func (o *POSTCargosOKBody) validateToken(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"token", "body", o.Token); err != nil {
		return err
	}

	if o.Token != nil {

		if err := o.Token.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pOSTCargosOK" + "." + "token")
			}
			return err
		}
	}

	return nil
}

func (o *POSTCargosOKBody) validateUsuario(formats strfmt.Registry) error {

	if err := validate.Required("pOSTCargosOK"+"."+"usuario", "body", o.Usuario); err != nil {
		return err
	}

	return nil
}

/*POSTCargosOKBodyToken p o s t cargos o k body token
swagger:model POSTCargosOKBodyToken
*/
type POSTCargosOKBodyToken struct {

	// id
	ID string `json:"id,omitempty"`

	// objeto
	Objeto string `json:"objeto,omitempty"`

	// tarjeta
	Tarjeta *POSTCargosOKBodyTokenTarjeta `json:"tarjeta,omitempty"`
}

// Validate validates this p o s t cargos o k body token
func (o *POSTCargosOKBodyToken) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTarjeta(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *POSTCargosOKBodyToken) validateTarjeta(formats strfmt.Registry) error {

	if swag.IsZero(o.Tarjeta) { // not required
		return nil
	}

	if o.Tarjeta != nil {

		if err := o.Tarjeta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pOSTCargosOK" + "." + "token" + "." + "tarjeta")
			}
			return err
		}
	}

	return nil
}

/*POSTCargosOKBodyTokenTarjeta p o s t cargos o k body token tarjeta
swagger:model POSTCargosOKBodyTokenTarjeta
*/
type POSTCargosOKBodyTokenTarjeta struct {

	// apellido
	Apellido string `json:"apellido,omitempty"`

	// bin
	Bin string `json:"bin,omitempty"`

	// emisor
	Emisor string `json:"emisor,omitempty"`

	// marca
	Marca string `json:"marca,omitempty"`

	// nombre
	Nombre string `json:"nombre,omitempty"`

	// numero
	Numero string `json:"numero,omitempty"`

	// pais
	Pais string `json:"pais,omitempty"`
}

// Validate validates this p o s t cargos o k body token tarjeta
func (o *POSTCargosOKBodyTokenTarjeta) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
